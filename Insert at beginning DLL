class Node:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None

class DoublyLinkedList:
    def __init__(self):
        self.head = None

    def insert_at_beginning(self, data):
        new_node = Node(data)
        new_node.next = self.head  # Point new node's next to current head

        if self.head is not None:
            self.head.prev = new_node  # Update current head's prev to new node

        self.head = new_node  # Move head to point to new node

    def print_list(self):
        current = self.head
        print("Doubly Linked List:", end=" ")
        while current:
            print(current.data, end=" <-> " if current.next else "")
            current = current.next
        print()

# Example usage:
dll = DoublyLinkedList()
dll.insert_at_beginning(10)
dll.insert_at_beginning(20)
dll.insert_at_beginning(30)

dll.print_list()  # Output: Doubly Linked List: 30 <-> 20 <-> 10
